<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.Size"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotEmpty"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.example.sbp.user.UserCreateForm"/>
    <fullyQualifiedTypeName name="org.springframework.dao.DataIntegrityViolationException"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="com.example.sbp.user.UserRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="com.example.sbp.user.UserRole"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"/>
    <fullyQualifiedTypeName name="jakarta.persistence.ManyToOne"/>
    <fullyQualifiedTypeName name="com.example.sbp.user.UserService"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="javax.security.auth.Subject"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.example.sbp.DataNotFoundException"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.ResponseStatusException"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.example.sbp.answer.AnswerForm"/>
    <fullyQualifiedTypeName name="org.springframework.validation.BindingResult"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="jakarta.validation.Valid"/>
    <fullyQualifiedTypeName name="jakarta.persistence.ManyToMany"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="java.security.Principal"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.commonmark.parser.Parser"/>
    <fullyQualifiedTypeName name="org.commonmark.node.Node"/>
    <fullyQualifiedTypeName name="javax.swing.text.html.HTMLDocument.HTMLReader"/>
    <fullyQualifiedTypeName name="org.commonmark.renderer.html.HtmlRenderer"/>
    <fullyQualifiedTypeName name="groovyjarjarantlr4.v4.runtime.atn.SemanticContext.Predicate"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="jakarta.persistence.criteria.Predicate"/>
    <fullyQualifiedTypeName name="jakarta.persistence.criteria.CriteriaQuery"/>
    <fullyQualifiedTypeName name="jakarta.persistence.criteria.CriteriaBuilder"/>
    <fullyQualifiedTypeName name="jakarta.persistence.criteria.Join"/>
    <fullyQualifiedTypeName name="com.example.sbp.user.SiteUser"/>
    <fullyQualifiedTypeName name="jakarta.persistence.criteria.JoinType"/>
    <fullyQualifiedTypeName name="com.example.sbp.question.Question"/>
    <fullyQualifiedTypeName name="com.example.sbp.question.QuestionRepository"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.domain.Specification"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
</qualifiedTypeNameHistroy>
